{"version":3,"file":"page-2.js","sources":["../src/js/search.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst btnSearch = document.querySelector('.btn-search');\nconst searchImagesInput = document.querySelector('.search-images-input').value;\nconst gallery = document.querySelector('.gallery');\n\nbtnSearch.addEventListener('click', event => {\n  event.preventDefault();\n  console.log(searchImagesInput.value);\n\n  const searchParams = new URLSearchParams({\n    key: '46374353-2f98dff3c8dab99fd2b2fa1f1',\n    q: searchImagesInput,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  console.log(searchParams.toString());\n\n  const url = `https://pixabay.com/api/?${searchParams}`;\n\n  fetch(url, { method: 'GET' })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (data.hits.length === 0) {\n        throw new Error('No results found');\n      }\n\n      const galleryImages = data.hits\n        .map(\n          image => `<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${image.webformatURL}\"\n      data-source=\"${image.largeImageURL}\"\n      alt=\"${image.tags}\"\n    />\n  </a>\n  <div class=\"characteristics-photo\">\n  <p class=\"characteristic\">Likes:<span class=\"characteristic-span\">${image.likes}</span></p>\n  <p class=\"characteristic\">Views:<span class=\"characteristic-span\">${image.views}</span></p>\n  <p class=\"characteristic\">Comments:<span class=\"characteristic-span\">${image.comments}</span></p>\n  <p class=\"characteristic\">Downloads:<span class=\"characteristic-span\">${image.downloads}</span></p>\n  </div>\n</li>`\n        )\n        .join('');\n\n      gallery.innerHTML = '';\n\n      gallery.insertAdjacentHTML('beforeend', galleryImages);\n\n      new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n    })\n    .catch(error => {\n      console.error(error);\n      iziToast.error({\n        title: '',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topCenter',\n      });\n    });\n});\n"],"names":["btnSearch","searchImagesInput","gallery","event","searchParams","url","response","data","galleryImages","image","SimpleLightbox","error","iziToast"],"mappings":"+IAKA,MAAMA,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAoB,SAAS,cAAc,sBAAsB,EAAE,MACnEC,EAAU,SAAS,cAAc,UAAU,EAEjDF,EAAU,iBAAiB,QAASG,GAAS,CAC3CA,EAAM,eAAc,EACpB,QAAQ,IAAIF,EAAkB,KAAK,EAEnC,MAAMG,EAAe,IAAI,gBAAgB,CACvC,IAAK,qCACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,QAAQ,IAAIG,EAAa,SAAU,CAAA,EAEnC,MAAMC,EAAM,4BAA4BD,CAAY,GAEpD,MAAMC,EAAK,CAAE,OAAQ,KAAK,CAAE,EACzB,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EACvB,MAAM,IAAI,MAAM,kBAAkB,EAGpC,MAAMC,EAAgBD,EAAK,KACxB,IACCE,GAAS;AAAA,kCACeA,EAAM,aAAa;AAAA;AAAA;AAAA,aAGxCA,EAAM,YAAY;AAAA,qBACVA,EAAM,aAAa;AAAA,aAC3BA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,sEAI+CA,EAAM,KAAK;AAAA,sEACXA,EAAM,KAAK;AAAA,yEACRA,EAAM,QAAQ;AAAA,0EACbA,EAAM,SAAS;AAAA;AAAA,MAGhF,EACA,KAAK,EAAE,EAEVP,EAAQ,UAAY,GAEpBA,EAAQ,mBAAmB,YAAaM,CAAa,EAErD,IAAIE,EAAe,aAAc,CAC/B,aAAc,MACd,aAAc,GACtB,CAAO,CACP,CAAK,EACA,MAAMC,GAAS,CACd,QAAQ,MAAMA,CAAK,EACnBC,EAAS,MAAM,CACb,MAAO,GACP,QACE,2EACF,SAAU,WAClB,CAAO,CACP,CAAK,CACL,CAAC"}